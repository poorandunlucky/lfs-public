-- wlan2.conf
-- Configuration file for the wlan module.

local wlancfg = { 
	mode = 'STA',				-- OFF, STA, AP, or STAAP.
	phymode = 'N',				-- B, G or N: Increases in bandwidth, decreases 
								-- in range/power usage (B or G for AP/STAAP).
	persistent = true			-- Save settings across reboots.
}

local stacfg = {
	hostname = 'ESP8266EX',		-- Name of the MCU.
	ssid = 'FIZZ13213-2',		-- SSID to join.
	key = 'your password',	-- Key to WLAN.
	deepsleep = nil,			-- False for light sleep, nil to disable sleep.
	dhcp = true,				-- Whether to use DHCP, ot not.
	ip = '10.0.0.100',
	netmask = '255.255.255.0',
	gateway = '10.0.0.1'
}

local apcfg = {
	ssid = 'ESP8266EX',			-- Name of the network.
	key = 'PaSsW0Rd!!!',  		-- nil for public.
	channel = 3,				-- Optional, same as STA in STAAP.
	dhcp = true,				-- Whether to use DHCP, or not.
	ip = '10.0.0.10',			-- Uses 192.168.4.1 in DHCP.
	netmask = '255.255.255.0',
	gateway = '10.0.0.1'
}

if ( stacfg.dhcp == true ) then
	stacfg.ip = nil
	stacfg.netmask = nil
	stacfg.gateway = nil
end

if ( apcfg.dhcp == true ) then
	apcfg.ip = nil
	apcfg.netmask = nil
	apcfg.gateway = nil
end

wlanconf = {

	mode = wlancfg.mode,				-- B, G, or N (AP/STAAP B or G only).
	save = wlancfg.persistent,			-- Config persistent across resets.
	phymode = wlancfg.phymode,			
	power = 100,						-- 1 to 100, optional.
	--[[ DNS IS NOT CONFIGURABLE ]]--
	dns1 = '208.67.222.222',			-- Optional.
	dns2 = '208.67.220.220',			-- Also optional.

	sta = {
		hostname = stacfg.hostname,
		ssid = stacfg.ssid,
		key = stacfg.key,
		ip = stacfg.ip,						-- Optional, nil for DHCP.
		netmask = stacfg.netmask,
		gateway = stacfg.gateway,
		mac = nil,							-- Optional ('aa-bb-cc-dd-ee-ff').
		bssid = nil,						-- Optional ('aa-bb-cc-dd-ee-ff').
		autoconnect = true,					-- Whether to wait for wifi.sta.										   connect() or not.
		rememberap = 1,						-- Access points to remember, 1-4.
		sleep = stacfg.deepsleep,
		save = wlancfg.persistent			-- Whether to make these settings 
											-- persistent across reboots.
	},

	ap = {
		ssid = apcfg.ssid,
		key = apcfg.key, 	 				-- Optional.
		ip = apcfg.ip,						-- Uses 192.168.4.1  if nil.
		netmask = apcfg.netmask,
		gateway = apcfg.gateway,
		dhcpstart = '10.0.0.200',			-- Optional, uses 192.168.4.2 to 
											-- 192.168.4.5 otherwise.
		mac = nil,							-- Optional ('aa-bb-cc-dd-ee-ff').
		channel = apcfg.channel,			-- Optional.
		hidden = false,						-- Broadcast SSID, or not.
		maxclients = 4,						-- Max clients, 1-4.
		save = wlancfg.persistent			-- Persistent across reboots or not.
	},

	regdomain = {
		country = 'CA',						-- Optional, defaults to CA.
		start_ch = 1,						-- Optional, defaults to 1.
		end_ch = 13							-- Optional, defaults to 13.
	}

}

-- End of file.
